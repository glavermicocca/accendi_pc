{"version":3,"sources":["network.jsx","App.js","reportWebVitals.js","index.js"],"names":["axios","require","default","cb","a","console","log","get","crossdomain","response","setTimeout","error","App","useState","contatore","setContatore","toggle","setToggle","className","onClick","event","sendCommands","ret","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAAMA,EAAQC,EAAQ,IAASC,QAE/B,yCAAe,WAAOC,GAAP,eAAAC,EAAA,6DACXC,QAAQC,IAAI,gBADD,kBAIcN,EAAMO,IAAI,8GAA+G,CAAEC,aAAa,IAJtJ,cAIHC,EAJG,OAKPJ,QAAQC,IAAIG,GALL,SAMUT,EAAMO,IAAI,4CAA6C,CAAEC,aAAa,IANhF,OAMPC,EANO,OAOPJ,QAAQC,IAAIG,GACZC,WAAU,sBAAC,sBAAAN,EAAA,sEACUJ,EAAMO,IAAI,4CAA6C,CAAEC,aAAa,IADhF,cACPC,EADO,OAEPJ,QAAQC,IAAIG,GAFL,SAGUT,EAAMO,IAAI,0CAA2C,CAAEC,aAAa,IAH9E,OAGPC,EAHO,OAIPJ,QAAQC,IAAIG,GACZN,IALO,2CAMR,KAdI,kDAgBPE,QAAQM,MAAR,MAhBO,iCAmBJ,+BAnBI,0DAAf,sD,MCqBeC,MAnBf,WAAgB,IAAD,EAEqBC,mBAAS,GAF9B,mBAENC,EAFM,KAEKC,EAFL,OAIeF,oBAAS,GAJxB,mBAING,EAJM,KAIEC,EAJF,KAMb,OACE,sBAAKC,UAAU,MAAf,UACE,4BAAIJ,IACHE,GAAU,wBAAQG,QAAO,uCAAE,WAAOC,GAAP,eAAAhB,EAAA,6DAC1Ba,GAAU,GACVF,EAAaD,EAAY,GAFC,SAGVO,GAAa,WAAQJ,GAAU,MAHrB,OAGtBK,EAHsB,OAI1BjB,QAAQC,IAAIgB,GAJc,2CAAF,sDAAf,2BCDFC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.df7013e3.chunk.js","sourcesContent":["const axios = require('axios').default;\r\n\r\nexport default async (cb) => {\r\n    console.log(\"sendCommands\")\r\n\r\n    try {\r\n        let response = await axios.get('http://192.168.5.89/cm?cmnd=Backlog%20Power%20on%3Bchannel1%2030%3BDelay%2020%3Bchannel1%2042%3BPower%20off', { crossdomain: true });\r\n        console.log(response);\r\n        response = await axios.get('http://192.168.5.89/cm?cmnd=channel1%2030', { crossdomain: true });\r\n        console.log(response);\r\n        setTimeout(async () => {\r\n            response = await axios.get('http://192.168.5.89/cm?cmnd=channel1%2042', { crossdomain: true });\r\n            console.log(response);\r\n            response = await axios.get('http://192.168.5.89/cm?cmnd=Power%20off', { crossdomain: true });\r\n            console.log(response);\r\n            cb()\r\n        }, 2000)\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n\r\n    return \"Prima richieste effettuate!\"\r\n}","import sendCommands from './network'\nimport React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n\n  const [contatore, setContatore] = useState(0);\n\n  const [toggle, setToggle] = useState(true);\n\n  return (\n    <div className=\"App\">\n      <p>{contatore}</p>\n      {toggle && <button onClick={async (event) => {\n        setToggle(false)\n        setContatore(contatore + 1)\n        var ret = await sendCommands(() => { setToggle(true) })\n        console.log(ret)\n      }}>Switch ON</button>}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}